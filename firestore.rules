rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own profile
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can create their own profile on signup
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      // Users can update their own profile
      allow update: if isOwner(userId);
      
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // Orders collection
    match /orders/{orderId} {
      // Users can read their own orders, admins can read all
      allow read: if isAuthenticated() && 
                     (request.auth.uid == resource.data.userId || isAdmin());
      
      // Authenticated users can create orders
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      
      // Only admins can update orders (for status changes)
      allow update: if isAdmin();
      
      // Only admins can delete orders
      allow delete: if isAdmin();
    }
    
    // Saved configurations
    match /configurations/{configId} {
      // Users can read their own configurations
      allow read: if isAuthenticated() && request.auth.uid == resource.data.userId;
      
      // Users can create their own configurations
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      
      // Users can update their own configurations
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      
      // Users can delete their own configurations
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.userId;
    }
    
    // Support tickets
    match /support_tickets/{ticketId} {
      // Anyone can create a support ticket
      allow create: if true;
      
      // Users can read their own tickets, admins can read all
      allow read: if isAuthenticated() && 
                     (request.auth.uid == resource.data.userId || isAdmin());
      
      // Only admins can update tickets
      allow update: if isAdmin();
      
      // Only admins can delete tickets
      allow delete: if isAdmin();
    }
    
    // Analytics collection (write-only for tracking)
    match /analytics/{docId} {
      // Anyone can write analytics data
      allow create: if true;
      
      // Only admins can read analytics
      allow read: if isAdmin();
      
      // No updates or deletes
      allow update, delete: if false;
    }
    
    // Product reviews (if implemented)
    match /reviews/{reviewId} {
      // Anyone can read reviews
      allow read: if true;
      
      // Authenticated users can create reviews
      allow create: if isAuthenticated();
      
      // Users can update their own reviews
      allow update: if isAuthenticated() && request.auth.uid == resource.data.userId;
      
      // Users can delete their own reviews, admins can delete any
      allow delete: if (isAuthenticated() && request.auth.uid == resource.data.userId) || isAdmin();
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
